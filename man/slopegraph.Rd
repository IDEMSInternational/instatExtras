% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slopegraph.R
\name{slopegraph}
\alias{slopegraph}
\title{Plot a Slopegraph a la Tufte}
\usage{
slopegraph(
  data,
  x,
  y,
  colour,
  data_label = NULL,
  y_text_size = 3,
  line_thickness = 1,
  line_colour = "ByGroup",
  data_text_size = 2.5,
  data_text_colour = "black",
  data_label_padding = 0.05,
  data_label_line_size = 0,
  data_label_fill_colour = "white",
  reverse_x_axis = FALSE,
  remove_missing = TRUE
)
}
\arguments{
\item{data}{a dataframe or an object that can be coerced to a dataframe.
Basic error checking is performed, to include ensuring that the named columns
exist in the dataframe. See the \code{\link{newcancer}} dataset for an example of
how the dataframe should be organized.}

\item{x}{a column inside the dataframe that will be plotted on the x axis.
Traditionally this is some measure of time.  The function accepts a column of class
ordered, factor or character.  NOTE if your variable is currently a "date" class
you must convert before using the function with \code{as.character(variablename)}.}

\item{y}{a column inside the dataframe that will be plotted on the y axis.
Traditionally this is some measure such as a percentage.  Currently the function
accepts a column of type integer or numeric.  The slopegraph will be most effective
when the y variables are not too disparate.}

\item{colour}{a column inside the dataframe that will be used to group and
distinguish different y variables.}

\item{data_label}{an optional column inside the dataframe that will be used
as the label for the data points plotted.  Can be complex strings and
have \code{NA} values but must be of class \code{chr}.  By default \code{y} is
converted to \code{chr} and used.}

\item{y_text_size}{Optionally the font size for the Y axis labels to be displayed.
y_text_size = 3 is the default must be a numeric.}

\item{line_thickness}{Optionally the thickness of the plotted lines that
connect the data points. LineThickness = 1 is the default must be a numeric.}

\item{line_colour}{Optionally the color of the plotted lines. By default it will use
the ggplot2 color palette for coloring by \code{colour}. The user may override
with \bold{one} valid color of their choice e.g. "black" (see colors() for choices)
\bold{OR}
they may provide a vector of colors such as c("gray", "red", "green", "gray", "blue")
\bold{OR} a named vector like c("Green" = "gray", "Liberal" = "red", "NDP" = "green",
"Others" = "gray", "PC" = "blue"). Any input must be character, and the length
of a vector \bold{should} equal the number of levels in \code{colour}. If the
user does not provide enough colors they will be recycled.}

\item{data_text_size}{Optionally the font size of the plotted data points. DataTextSize = 2.5
is the default must be a numeric.}

\item{data_text_colour}{Optionally the font color of the plotted data points. \code{"black"}
is the default can be either \code{colors()} or hex value e.g. "#FF00FF".}

\item{data_label_padding}{Optionally the amount of space between the plotted
data point numbers and the label "box". By default very small = 0.05 to
avoid overlap. Must be a numeric. Too large a value will risk "hiding"
datapoints.}

\item{data_label_line_size}{Optionally how wide a line to plot around the data
label box. By default = 0 to have no visible border line around the
label. Must be a numeric.}

\item{data_label_fill_colour}{Optionally the fill color or background of the
plotted data points. \code{"white"} is the default can be any of the \code{colors()}
or hex value e.g. "#FF00FF".}

\item{reverse_x_axis}{logical, set this value to \code{TRUE} if you want
to reverse the \strong{factor levels} on the x scale.}

\item{remove_missing}{logical, by default set to \code{TRUE} so that if any \code{y}
is missing \bold{all rows} for that \code{colour} are removed. If set to \code{FALSE} then
the function will try to remove and graph what data it does have. \bold{N.B.} missing values
for \code{x} and \code{colour} are never permitted and will generate a fatal error with
a warning.}
}
\value{
a plot of type ggplot to the default plot device
}
\description{
This function and documentation are taken from the \code{"newggslopegraph"} function in the \code{CGPfunctions} R package.
There are slight modifications for use in R-Instat.
This function creates a "slopegraph" as conceptualised by Edward Tufte. Slopegraphs are minimalist
and efficient presentations of your data that can simultaneously convey the relative rankings,
the actual numeric values, and the changes and directionality of the data over time.
Takes a dataframe as input, with three named columns being used to draw the plot.
Makes the required adjustments to the ggplot2 parameters and returns the plot.
}
\examples{

data <- data.frame(
          Year = rep(c("2020", "2021"), each = 3),
          Value = c(10, 20, 15, 12, 25, 18),
          Group = rep(c("A", "B", "C"), times = 2)
          )
# Use the slopegraph function
slopegraph(data, x = Year, y = Value, colour = Group)
}
\references{
Based on: Edward Tufte, Beautiful Evidence (2006), pages 174-176.
This function and documentation are taken from the \code{"newggslopegraph"} function in the \code{CGPfunctions} R package.
Full credit on this function goes to the authors of the \code{CGPfunctions} R package.
}
\author{
Chuck Powell
}
